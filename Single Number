#Task:
Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
You must implement a solution with a linear runtime complexity and use only constant extra space.

#Input:
Input: nums = [2,2,1]
Output: 1

#Solution:
def singleNumber(self, nums: List[int]) -> int:
        counts = {}
        for n in nums:    
            if n not in counts:
                counts[n] = 1
            else:
                del counts[n]
        return list(counts.keys())[0] 

#Output:
1
